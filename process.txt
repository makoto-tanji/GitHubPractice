1.リポジトリ作成

1-2.編集

1-3.
git checkout main
して
とりあえずcommit

1-4.
2-1とかの内容が消えたままの状態でcommit
次マージしたらどうなるのか


2-1.ブランチtestBranch作成
git add -A
git commit -m
git push

エラー
fatal: The current branch testBranch has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin testBranch

2-2.
remoteのblanchと紐付いていないらしい
pullもpushもできない

なので
git push -u origin testBranch

2-3.
mainに切り替えようとしたら
error: Your local changes to the following files would be overwritten by checkout:
        README.md
        process.txt
Please commit your changes or stash them before you switch branches.
Aborting

なのでもう一度コミット

1-5.
Accept Current Change | Accept Incoming Change | Accept Both | Compare Change
<<<<<<< HEAD (Current Change)
// main の内容
======
// testBranchの内容
>>>>>>> testBranch (Incoming Change)

ってのがVSCode内で表示された
両方残すならAccept Both

1-6.
cloneした後に元のディレクトリ側で編集
add
comit
push

エラー

 ! [rejected]        main -> main (fetch first)
error: failed to push some refs to 'https://github.com/makoto-tanji/GitHubPractice.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

リモートにローカルにない作業が含まれているため、更新は拒否されました。 これは通常、別のリポジトリが同じ参照にプッシュすることによって発生します。 もう一度プッシュする前に、最初にリモートの変更（たとえば、「git pull ...」）を統合することをお勧めします。 詳細については、「gitpush--help」の「早送りに関する注意」を参照してください。

1-7.
git status
On branch main
Your branch is ahead of 'origin/main' by 1 commit.
  (use "git push" to publish your local commits)

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   process.txt

つまり
cloneした方のpush(リモート main)がcloneされた方(ローカル=origin/main)に反映されていないことが原因

git fetch origin main
git merge origin/main

or

git pull origin main

fetchとは
モートリポジトリの最新情報をローカルリポジトリ(origin/main)へ持ってくる
origin/mainブランチ ローカルにある、リモートのmianブランチを追跡するリモート追跡ブランチ。

remote         |    local

mainブランチ  ---- origin/mainブランチ ---- mainブランチ

git fetch：リモートの「main」ブランチをローカルの「origin/main」ブランチに
git merge：ローカルの「origin/main」ブランチをローカルの「main」ブランチに